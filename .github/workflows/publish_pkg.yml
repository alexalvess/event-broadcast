name: Publish to NPM

on:
  workflow_call:
  push:
    branches:
      - '**'
  pull_request:
    types: [closed]
    branches:
      - '**'

jobs:
  # create_tag_and_release:
  #   if: ${{ github.event_name != 'pull_request' || github.event.pull_request.merged == true }}
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20'

  #   - name: Configure Git credentials
  #     run: |
  #       git config --global user.email "github-actions[bot]@users.noreply.github.com"
  #       git config --global user.name "github-actions[bot]"

  #   - name: Extract package version
  #     id: version
  #     run: echo ::set-output name=version::$(node -e "console.log(require('./package.json').version)")

  #   - name: Check if tag exists
  #     id: tag_exists
  #     run: |
  #       git fetch --tags
  #       tags=$(git tag -l)
  #       if echo "$tags" | grep -q "v${{ steps.version.outputs.version }}"; then
  #         echo "Tag v${{ steps.version.outputs.version }} already exists"
  #         echo "exists=true" >> $GITHUB_ENV
  #       else
  #         echo "Tag v${{ steps.version.outputs.version }} does not exist"
  #         echo "exists=false" >> $GITHUB_ENV
  #       fi

  #   - name: Pull changes
  #     run: |
  #       git fetch
  #       git pull

  #   - name: Create tag
  #     if: env.exists == 'false'
  #     run: git tag -a v${{ steps.version.outputs.version }} -m "Version ${{ steps.version.outputs.version }}"

  #   - name: Push tag to GitHub
  #     if: env.exists == 'false'
  #     uses: ad-m/github-push-action@master
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       tags: v${{ steps.version.outputs.version }}
  #       branch: ${{ github.ref }}

  #   - name: Create release
  #     if: env.exists == 'false'
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: v${{ steps.version.outputs.version }}
  #       release_name: Release ${{ steps.version.outputs.version }}
  #       body: |
  #         Release ${{ steps.version.outputs.version }}
  #       prerelease: |
  #         if [[ "${{ steps.version.outputs.version }}" == *"beta"* ]]; then
  #           true
  #         else
  #           false
  #         fi

  publish:
    runs-on: ubuntu-latest
    # needs: create_tag_and_release

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Pull changes
      run: |
        git fetch
        git pull

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "lts/*"
        registry-url: 'https://registry.npmjs.org'

    - name: Install latest NPM
      run: npm install -g npm@latest

    - name: Install dependencies
      run: npm ci

    - name: Build Package
      run: npm run build

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}